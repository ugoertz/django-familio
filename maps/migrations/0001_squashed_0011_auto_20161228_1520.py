# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-30 20:11
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import filebrowser.fields
import taggit.managers


class Migration(migrations.Migration):

    replaces = [(b'maps', '0001_initial'), (b'maps', '0002_auto_20150523_1203'), (b'maps', '0003_auto_20150524_1537'), (b'maps', '0004_auto_20150525_1006'), (b'maps', '0005_auto_20150525_1446'), (b'maps', '0006_auto_20150525_1457'), (b'maps', '0007_auto_20150531_1512'), (b'maps', '0008_auto_20150613_2041'), (b'maps', '0009_custommap_tags'), (b'maps', '0010_auto_20160220_1634'), (b'maps', '0011_auto_20161228_1520')]

    initial = True

    dependencies = [
        ('tags', '0001_initial'),
        ('sites', '0001_initial'),
        ('notaro', '0009_auto_20150510_2033'),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('slug', models.SlugField(blank=True)),
                ('handle', models.CharField(max_length=50, unique=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Ort',
                'verbose_name_plural': 'Orte',
            },
        ),
        migrations.CreateModel(
            name='PlaceNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=1)),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notaro.Note', verbose_name='Text')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.Place', verbose_name='Ort')),
            ],
            options={
                'verbose_name': 'Text zu Ort',
                'verbose_name_plural': 'Texte zu Ort',
            },
        ),
        migrations.CreateModel(
            name='PlaceUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=1)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.Place')),
            ],
            options={
                'ordering': ('position',),
                'verbose_name': 'URL zum Ort',
                'verbose_name_plural': 'URLs zum Ort',
            },
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Titel')),
                ('link', models.CharField(max_length=200, verbose_name='Link')),
            ],
        ),
        migrations.AddField(
            model_name='placeurl',
            name='url',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.Url', verbose_name='URL'),
        ),
        migrations.AddField(
            model_name='place',
            name='notes',
            field=models.ManyToManyField(blank=True, through='maps.PlaceNote', to=b'notaro.Note'),
        ),
        migrations.AddField(
            model_name='place',
            name='urls',
            field=models.ManyToManyField(blank=True, through='maps.PlaceUrl', to=b'maps.Url'),
        ),
        migrations.CreateModel(
            name='CustomMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Titel')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('bbox', django.contrib.gis.db.models.fields.PolygonField(srid=4326, verbose_name='Begrenzung')),
                ('rendered', filebrowser.fields.FileBrowseField(blank=True, help_text='Gerenderte Karte im png-Format', max_length=200, null=True, verbose_name='Bilddatei')),
            ],
        ),
        migrations.CreateModel(
            name='CustomMapMarker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=30)),
                ('description', models.CharField(blank='True', max_length=200, verbose_name='Beschreibung')),
                ('label_offset_x', models.FloatField(default=0, verbose_name='Positionskorrektur Label X')),
                ('label_offset_y', models.FloatField(default=0, verbose_name='Positionskorrektur Label Y')),
                ('position', models.IntegerField(default=1)),
                ('custommap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.CustomMap', verbose_name='Karte')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.Place', verbose_name='Ort')),
                ('style', models.CharField(blank=True, max_length=400, null=True, verbose_name='Stil')),
            ],
        ),
        migrations.AddField(
            model_name='custommap',
            name='markers',
            field=models.ManyToManyField(blank=True, through='maps.CustomMapMarker', to=b'maps.Place', verbose_name='Markierungen'),
        ),
        migrations.AddField(
            model_name='custommap',
            name='sites',
            field=models.ManyToManyField(to=b'sites.Site'),
        ),
        migrations.AddField(
            model_name='custommap',
            name='map_style',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Kartenstil'),
        ),
        migrations.AddField(
            model_name='custommap',
            name='refresh',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='custommap',
            name='render_status',
            field=models.CharField(default='NOTRENDERED', max_length=800),
        ),
        migrations.AlterModelOptions(
            name='custommap',
            options={'ordering': ('-id',), 'verbose_name': 'Eigene Landkarte', 'verbose_name_plural': 'Eigene Landkarten'},
        ),
        migrations.AlterModelOptions(
            name='custommapmarker',
            options={'ordering': ('position',)},
        ),
        migrations.AlterField(
            model_name='custommap',
            name='refresh',
            field=models.BooleanField(default=False, verbose_name='Gerenderte Karte aktualisieren'),
        ),
        migrations.AlterField(
            model_name='place',
            name='location',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Geo-Koordinaten'),
        ),
        migrations.AlterField(
            model_name='place',
            name='notes',
            field=models.ManyToManyField(blank=True, through='maps.PlaceNote', to=b'notaro.Note', verbose_name='Texte'),
        ),
        migrations.AlterField(
            model_name='place',
            name='title',
            field=models.CharField(blank=True, max_length=200, verbose_name='Titel'),
        ),
        migrations.AlterField(
            model_name='place',
            name='urls',
            field=models.ManyToManyField(blank=True, through='maps.PlaceUrl', to=b'maps.Url', verbose_name='URLs'),
        ),
        migrations.AlterField(
            model_name='placeurl',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maps.Place', verbose_name='Ort'),
        ),
        migrations.AddField(
            model_name='custommap',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='tags.CustomTagThrough', to='tags.CustomTag', verbose_name='Tags'),
        ),
        migrations.AlterModelManagers(
            name='custommap',
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
                ('objects', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
    ]
